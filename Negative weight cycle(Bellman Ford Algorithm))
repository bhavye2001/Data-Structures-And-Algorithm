#User function Template for python3

class Solution:
    def isNegativeWeightCycle(self, n, edges):
        #Code here
        INT_MAX=100000000000000000000
        ans=[INT_MAX]*n
        ans[0]=0
        
        for i in range(n-1):
            for j in range(len(edges)):
                src=edges[j][0]
                des=edges[j][1]
                wt=edges[j][2]
                if(ans[src]!=INT_MAX and ans[src]+wt<ans[des]):
                    ans[des]=ans[src]+wt
        
        for j in range(len(edges)):
                src=edges[j][0]
                des=edges[j][1]
                wt=edges[j][2]
                if(ans[src]!=INT_MAX and ans[src]+wt<ans[des]):
                    return 1
        return 0
        

#{ 
#  Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
    T=int(input())
    for i in range(T):
        n, m = input().split()
        n = int(n)
        m = int(m)
        edges = []
        for _ in range(m):
            edges.append(list(map(int, input().split())))
        obj = Solution()
        ans = obj.isNegativeWeightCycle(n, edges)
        print(ans)

# } Driver Code Ends
