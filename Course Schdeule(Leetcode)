from collections import deque
class Solution:
    def canFinish(self, v: int, a: List[List[int]]) -> List[int]:
        graph={}
        indegree={}
        
        for i in range(v):
            graph[i]=[]
            indegree[i]=0
        
        for edge in a:
            child=edge[0]
            parent=edge[1]
            indegree[child]+=1
            graph[parent].append(child)
            
        sources=deque()
        for i,j in indegree.items():
            if(j==0):
                sources.append(i)
        
        ans=[]
        while sources:
            c=sources.popleft()
            ans.append(c)
            for nbr in graph[c]:
                indegree[nbr]-=1
                if(indegree[nbr]==0):
                    sources.append(nbr)
        if(len(ans)==v):
            return True
        return False
