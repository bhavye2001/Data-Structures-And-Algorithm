def lcs(s1,s2):
        m=len(s1)
        n=len(s2)
        c=[[0 for i in range(n+1)] for i in range(m+1)]
        for i in range(1,m):
            c[i][0]=0
        for i in range(n):
            c[0][i]=0
        for i in range(0,m):
            for j in range(0,n):
                if(s1[i]==s2[j]):
                    c[i][j]=c[i-1][j-1]+1
                else:
                    if(c[i-1][j]>=c[i][j-1]):
                        c[i][j]=c[i-1][j]
                    else:
                        c[i][j]=c[i][j-1]
        return(c[m-1][n-1])
class Solution:
    
    #Function to find length of shortest common supersequence of two strings
    def shortestCommonSupersequence(self, X, Y, m, n):
        b=lcs(X,Y)
        return(b+len(X)+len(Y)-2*b)
