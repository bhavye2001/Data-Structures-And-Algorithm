class Solution:
    def matrixMultiplication(self, N, arr):
        # code here
        n=N
        m=[[0]*(n) for i in range(n)]
        
        for l in range(2,n):
            for i in range(1,n-l+1):
                j=i+l-1
                m[i][j]=int(1e9+7)
                for k in range(i,j):
                    q=m[i][k]+m[k+1][j]+(arr[i-1]*arr[j]*arr[k])
                    if(q<m[i][j]):
                        m[i][j]=q
        return(m[1][n-1])
            

#{ 
#  Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
    t = int(input())
    for _ in range(t):
        N = int(input())
        arr = input().split()
        for i in range(N):
            arr[i] = int(arr[i])
        
        ob = Solution()
        print(ob.matrixMultiplication(N, arr))
# } Driver Code Ends
