def longest(x,y):
    m=len(x)
    n=len(y)
    c = [[0]*(n+1) for i in range(m+1)]
    for i in range(m+1):
        c[i][0]=0
    for j in range(n+1):
        c[0][j]=0
    for i in range(1,m+1):
        for j in range(1,n+1):
            if(x[i-1]==y[j-1]):
                c[i][j]=c[i-1][j-1]+1
            elif(x[i-1]!=y[j-1]):
                c[i][j]=max(c[i][j-1],c[i-1][j])
    return(c[-1][-1])
class Solution:
    def longestPalindromeSubseq(self, S: str) -> int:
        a=list(S)
        a.reverse()
        a="".join(a)
        b=longest(S,a)
        return(b)
